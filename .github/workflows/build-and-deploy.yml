name: Build and Deploy
on:
  push:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      # Debug step to check file structure after build
      - name: Debug file structure
        run: |
          echo "Contents of current directory:"
          ls -la
          echo "Checking if dist directory exists:"
          if [ -d "dist" ]; then
            echo "dist directory exists"
            echo "Contents of dist directory:"
            ls -la dist
          else
            echo "dist directory does not exist"
          fi

      # Create a deployment branch with only what's needed to run in production
      - name: Prepare deployment branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Create and check out an orphan branch (no history)
          git checkout --orphan deployment

          # Remove everything
          git rm -rf .

          # Create directories
          mkdir -p dist

          # Only copy dist if it exists in the main branch
          if [ -d "../dist" ] && [ "$(ls -A ../dist)" ]; then
            echo "Copying files from dist directory"
            cp -r ../dist/* dist/
          else
            echo "WARNING: dist directory is empty or doesn't exist"
            # Create a placeholder file to avoid empty directory issues
            echo "// This directory should contain built JavaScript files" > dist/README.md
          fi

          # Copy drizzle migrations folder
          mkdir -p drizzle
          if [ -d "../drizzle" ] && [ "$(ls -A ../drizzle)" ]; then
            cp -r ../drizzle/* drizzle/
          else
            echo "WARNING: drizzle directory is empty or doesn't exist"
          fi

          # Copy drizzle config if it exists
          if [ -f "../drizzle.config.ts" ]; then
            cp ../drizzle.config.ts .
          fi

          # Copy package files
          cp ../package.json .
          cp ../package-lock.json .

          # Create a .npmrc file to prevent installing dev dependencies
          echo 'omit=dev' > .npmrc

          # Add and commit files
          git add .
          git commit -m "Deploy production build"

      - name: Push deployment branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: deployment
          force: true
